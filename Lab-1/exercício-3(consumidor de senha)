#include <stdio.h>
#include <stdlib.h>
#define MAX_SENHAS 10
// Estrutura para armazenar as senhas geradas
typedef struct {
    int normais[MAX_SENHAS];
    int prioridade[MAX_SENHAS];
    int contador_normais;
    int contador_prioridade;
} Senhas;
// Função para gerar senhas
void gerarSenhas(Senhas *senhas) {
    senhas->contador_normais = 0;
    senhas->contador_prioridade = 0;
   
    for (int i = 0; i < MAX_SENHAS; i++) {
        senhas->normais[i] = rand() % 1000 + 1; // Senhas normais de 1 a 1000
        senhas->prioridade[i] = rand() % 1000 + 1001; // Senhas de prioridade de 1001 a 2000
    }
}
// Função para consumir senhas
void consumirSenha(Senhas *senhas, int *ultima_chamada_prioridade) {
    if (*ultima_chamada_prioridade) {
        if (senhas->contador_prioridade < MAX_SENHAS) {
            printf("Chamando senha de prioridade: %d\n", senhas->prioridade[senhas->contador_prioridade]);
            senhas->contador_prioridade++;
        } else {
            printf("Senhas de prioridade esgotadas. Chamando senha normal: %d\n", senhas->normais[senhas->contador_normais]);
            senhas->contador_normais++;
            *ultima_chamada_prioridade = 0;
        }
    } else {
        if (senhas->contador_normais < MAX_SENHAS) {
            printf("Chamando senha normal: %d\n", senhas->normais[senhas->contador_normais]);
            senhas->contador_normais++;
        } else {
            printf("Senhas normais esgotadas. Chamando senha de prioridade: %d\n", senhas->prioridade[senhas->contador_prioridade]);
            senhas->contador_prioridade++;
            *ultima_chamada_prioridade = 1;
        }
    }
}
// Função para mostrar as senhas restantes
void mostrarSenhasRestantes(Senhas senhas) {
    printf("Senhas normais restantes: %d\n", MAX_SENHAS - senhas.contador_normais);
    printf("Senhas de prioridade restantes: %d\n", MAX_SENHAS - senhas.contador_prioridade);
}
int main() {
    Senhas senhas;
    int opcao;
    int ultima_chamada_prioridade = 0; // Inicia com senha normal
   
    while (1) {
        printf("\nMenu:\n");
        printf("1. Gerar senhas\n");
        printf("2. Consumir senha\n");
        printf("3. Mostrar senhas restantes\n");
        printf("4. Sair\n");
        printf("Escolha uma opção: ");
        scanf("%d", &opcao);
       
        switch (opcao) {
            case 1:
                gerarSenhas(&senhas);
                printf("Senhas geradas com sucesso!\n");
                break;
            case 2:
                consumirSenha(&senhas, &ultima_chamada_prioridade);
                break;
            case 3:
                mostrarSenhasRestantes(senhas);
                break;
            case 4:
                printf("Saindo do programa...\n");
                exit(0);
            default:
                printf("Opção inválida. Tente novamente.\n");
        }
    }
    return 0;
}